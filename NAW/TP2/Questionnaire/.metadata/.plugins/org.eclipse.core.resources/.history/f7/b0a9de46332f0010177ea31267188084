import java.awt.GridLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import java.io.*;
import java.util.*;
import javax.xml.parsers.*;
import org.w3c.dom.*;


/**
 * Représente un panneau destiné à contenir une question, accompagné d'un champ de saisie de réponse.
 * @author rakotobe
 */

public class QuestionPanel {
	
	private JPanel panel;
	private JLabel enonce;
//	private ReponsePanel<?> reponsepanel;
	
	// Gestionnaires de placements. Je les met en statique afin de ne pas multiplier les instances.
	private static final GridLayout TROIS_LIGNES = new GridLayout(3,1);
	
	
	  NodeList questionnaire = fils.item(2).getChildNodes(); 
	  for (int i=0;i<questionnaire.getLength();i++){
		  Element questions = (Element) questionnaire.item(i); 
		  QuestionPanel qp = new QuestionPanel(questions);
	
	
	
	
	
	
	/**
	 * Construit le QuestionPanel correspondant à la question passée en paramètre
	 * @param question contiendra intituleQuestion et les reponses 
	 */
	public QuestionPanel(Element question) {
		// Initialisation des attributs
		this.enonce = new JLabel(question.getFirstChild().getTextContent());
		
		this.reponsepanel = question.getReponse().getMyReponsePanel();
		
		this.panel = new JPanel(QuestionPanel.TROIS_LIGNES);
		
		// Construction du Panel
		this.panel.add(this.enonce);
		this.panel.add(this.reponsepanel.getPanel());
		
		// Application du style
		this.enonce.setBorder(Style.MARGES_INTERNES);
		this.enonce.setForeground(Style.COULEUR_QUESTION);
		this.enonce.setFont(Style.PETITE_POLICE);
		
		this.panel.setBackground(Style.FOND_QUESTION);
		this.panel.setBorder(Style.BORDURE_FINE);
	}
	
	
	/**
	 * Valide la réponse tapée par l'utilisateur.
	 * @return Le nombre de points gagnés pour cette question.
	 */
	public int valider() {
		if (this.question.getReponse().estCorrecte(this.reponsepanel.getValue())) { // Si la réponse donnée est correcte.
			// Changement de couleur du panel, puis retour du nombre de points gagnés.
			this.panel.setBackground(Style.FOND_QUESTION_VALIDE);
			
			this.annonceReponse.setForeground(Style.COULEUR_VALIDE);
			this.annonceReponse.setText("C'est bon! ( "+this.question.getPoints()+" point(s) )");
			
			return this.question.getPoints();
		} 
		else { // Si la réponse donnée est incorrecte.
			this.panel.setBackground(Style.FOND_QUESTION);
			
			this.annonceReponse.setForeground(Style.COULEUR_INVALIDE);
			this.annonceReponse.setText("Incorrect ! La bonne réponse était: "+this.question.getReponse().toString());
			
			return 0;
		}
	}
	
	/**
	 * Renvoie le JPanel associé au QuestionPanel.
	 * @return Le JPanel associé au QuestionPanel.
	 */
	public JPanel getPanel() {
		return panel;
	}

}
